/**
 * 比特位是否设置
 * @param num
 * @param bit **位数**
 */
export declare function isBitSet(num: number, bit: number): boolean;
/**
 * 比特位是否设置
 * @param num
 * @param bit **值**
 */
export declare function isBitEnumSet(num: number, bit: number): boolean;
/**
 * 比特位是否未设置
 * @param num
 * @param bit **位数**
 */
export declare function isBitNotSet(num: number, bit: number): boolean;
/**
 * 比特位是否未设置
 * @param num
 * @param bit **值**
 */
export declare function isBitEnumNotSet(num: number, bit: number): boolean;
/**
 * 设置比特位
 * @param num
 * @param bit **位数**
 */
export declare function setBit(num: number, bit: number): number;
/**
 * 设置比特位
 * @param num
 * @param bit **值**
 */
export declare function setBitEnum(num: number, bit: number): number;
/**
 * 清除比特位
 * @param num
 * @param bit **位数**
 */
export declare function clearBit(num: number, bit: number): number;
/**
 * 清除比特位
 * @param num
 * @param bit **值**
 */
export declare function clearBitEnum(num: number, bit: number): number;
/**
 * 反转比特位
 * @param num
 * @param bit **位数**
 */
export declare function toggleBit(num: number, bit: number): number;
/**
 * 反转比特位
 * @param num
 * @param bit **值**
 */
export declare function toggleEnumBit(num: number, bit: number): number;
