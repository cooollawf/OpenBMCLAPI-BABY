"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBaseIdLoader = void 0;
const is_1 = __importDefault(require("@sindresorhus/is"));
const mongodb_1 = require("./mongodb");
const DataLoader = require("dataloader");
function equals(a, b) {
    if (is_1.default.primitive(a)) {
        if (is_1.default.primitive(b)) {
            return a === b;
        }
        else {
            if (is_1.default.object(b)) {
                return a === b.toString();
            }
            else {
                return a === b;
            }
        }
    }
    else if (is_1.default.object(a)) {
        if (is_1.default.primitive(b)) {
            return a.toString() === b;
        }
        else {
            if (is_1.default.object(b)) {
                return a.toString() === b.toString();
            }
            else {
                return a.toString() === b;
            }
        }
    }
    return false;
}
function getBaseIdLoader(model, castId = mongodb_1.toObjectId) {
    return new DataLoader(async (ids) => {
        let castedIds;
        if (castId) {
            castedIds = ids.map(castId);
        }
        else {
            castedIds = [...ids];
        }
        const docs = await model.find({ _id: { $in: castedIds } });
        return ids.map((id) => docs.find((doc) => equals(doc._id, id)));
    }, {
        cacheKeyFn(e) {
            if (is_1.default.primitive(e)) {
                return e;
            }
            else {
                return e.toString();
            }
        },
    });
}
exports.getBaseIdLoader = getBaseIdLoader;
//# sourceMappingURL=mongodb-dataloader.js.map