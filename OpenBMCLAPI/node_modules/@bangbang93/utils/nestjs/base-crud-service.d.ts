import { Model } from 'mongoose';
import { DocumentType, RichModelType } from 'mongoose-typescript';
import { Constructor, Paged } from '../index';
import { IdType } from '../mongodb';
export declare abstract class BaseCrudService<T extends DocumentType<any>> {
    private readonly model;
    protected constructor(model: RichModelType<Constructor<T>>);
    getById(id: IdType): Promise<T | null>;
    listByIds(ids: IdType[]): Promise<T[]>;
    create(data: any): Promise<T>;
    search(query: Record<string, unknown>, skip?: number, limit?: number, queryHelper?: (query: ReturnType<Model<T>['find']>) => void): Promise<Paged<T>>;
    update(id: IdType, data: Partial<T>): Promise<void>;
    delete(id: IdType): Promise<void>;
}
